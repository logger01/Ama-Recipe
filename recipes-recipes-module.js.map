{"version":3,"sources":["webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.css","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.html","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.ts","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.css","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.html","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.ts","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.css","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.html","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts","webpack:///./src/app/recipes/recipe-list/recipe-list.component.css","webpack:///./src/app/recipes/recipe-list/recipe-list.component.html","webpack:///./src/app/recipes/recipe-list/recipe-list.component.ts","webpack:///./src/app/recipes/recipe-start/recipe-start.component.css","webpack:///./src/app/recipes/recipe-start/recipe-start.component.html","webpack:///./src/app/recipes/recipe-start/recipe-start.component.ts","webpack:///./src/app/recipes/recipes-routing.module.ts","webpack:///./src/app/recipes/recipes.component.css","webpack:///./src/app/recipes/recipes.component.html","webpack:///./src/app/recipes/recipes.component.ts","webpack:///./src/app/recipes/recipes.module.ts"],"names":[],"mappings":"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","file":"recipes-recipes-module.js","sourcesContent":["import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this.authService.isAuthenticated();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <img\\n      [src]=\\\"recipe.imagePath\\\"\\n      alt=\\\"{{ recipe.name }}\\\"\\n      class=\\\"img-responsive\\\"\\n      style=\\\"max-height: 300px;\\\"\\n    />\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <h1>{{ recipe.name }}</h1>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <div class=\\\"btn-group\\\" appDropdown>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle\\\">\\n        Manage Recipe <span class=\\\"caret\\\"></span>\\n      </button>\\n      <ul class=\\\"dropdown-menu\\\">\\n        <li>\\n          <a (click)=\\\"onAddToShoppingList()\\\" style=\\\"cursor: pointer;\\\"\\n            >Add To Shopping List</a\\n          >\\n        </li>\\n        <li>\\n          <a style=\\\"cursor: pointer;\\\" (click)=\\\"onEditRecipe()\\\">Edit Recipe</a>\\n        </li>\\n        <li>\\n          <a style=\\\"cursor: pointer;\\\" (click)=\\\"onDeleteRecipe()\\\"\\n            >Delete Recipe</a\\n          >\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">{{ recipe.description }}</div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\" *ngFor=\\\"let ingredient of recipe.ingredients\\\">\\n        {{ ingredient.name }} - {{ ingredient.amount }}\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\nimport { Recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.css']\n})\nexport class RecipeDetailComponent implements OnInit {\n  recipe: Recipe;\n  id: number;\n\n  constructor(private recipeService: RecipeService,\n              private route: ActivatedRoute,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.route.params\n      .subscribe(\n        (params: Params) => {\n          this.id = +params['id'];\n          this.recipe = this.recipeService.getRecipe(this.id);\n        }\n      );\n  }\n\n  onAddToShoppingList() {\n    this.recipeService.addIngredientsToShoppingList(this.recipe.ingredients);\n  }\n\n  onEditRecipe() {\n    this.router.navigate(['edit'], {relativeTo: this.route});\n    // this.router.navigate(['../', this.id, 'edit'], {relativeTo: this.route});\n  }\n\n  onDeleteRecipe() {\n    this.recipeService.deleteRecipe(this.id);\n    this.router.navigate(['/recipes']);\n  }\n\n}\n","module.exports = \"input.ng-invalid.ng-touched,\\ntextarea.ng-invalid.ng-touched {\\n  border: 1px solid red;\\n}\\n#savbtn {\\n  margin-right: 4px;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <form [formGroup]=\\\"recipeForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <button \\n          id=\\\"savbtn\\\"\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-success\\\"\\n            [disabled]=\\\"!recipeForm.valid\\\">Save</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Name</label>\\n            <input\\n              type=\\\"text\\\"\\n              id=\\\"name\\\"\\n              formControlName=\\\"name\\\"\\n              class=\\\"form-control\\\">\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"imagePath\\\">Image URL</label>\\n            <input\\n              type=\\\"text\\\"\\n              id=\\\"imagePath\\\"\\n              formControlName=\\\"imagePath\\\"\\n              class=\\\"form-control\\\"\\n              #imagePath>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <img [src]=\\\"imagePath.value\\\" class=\\\"img-responsive\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"description\\\">Description</label>\\n            <textarea\\n              type=\\\"text\\\"\\n              id=\\\"description\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"description\\\"\\n              rows=\\\"6\\\"></textarea>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\" formArrayName=\\\"ingredients\\\">\\n          <div\\n            class=\\\"row\\\"\\n            *ngFor=\\\"let ingredientCtrl of getControls(); let i = index\\\"\\n            [formGroupName]=\\\"i\\\"\\n            style=\\\"margin-top: 10px;\\\">\\n            <div class=\\\"col-xs-8\\\">\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"name\\\">\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n              <input\\n                type=\\\"number\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"amount\\\">\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-danger\\\"\\n                (click)=\\\"onDeleteIngredient(i)\\\">X</button>\\n            </div>\\n          </div>\\n          <hr>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-success\\\"\\n                (click)=\\\"onAddIngredient()\\\">Add Ingredient</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\n\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n})\nexport class RecipeEditComponent implements OnInit {\n  id: number;\n  editMode = false;\n  recipeForm: FormGroup;\n\n  constructor(private route: ActivatedRoute,\n              private recipeService: RecipeService,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.route.params\n      .subscribe(\n        (params: Params) => {\n          this.id = +params['id'];\n          this.editMode = params['id'] != null;\n          this.initForm();\n        }\n      );\n  }\n\n  onSubmit() {\n    // const newRecipe = new Recipe(\n    //   this.recipeForm.value['name'],\n    //   this.recipeForm.value['description'],\n    //   this.recipeForm.value['imagePath'],\n    //   this.recipeForm.value['ingredients']);\n    if (this.editMode) {\n      this.recipeService.updateRecipe(this.id, this.recipeForm.value);\n    } else {\n      this.recipeService.addRecipe(this.recipeForm.value);\n    }\n    this.onCancel();\n  }\n\n  onAddIngredient() {\n    (<FormArray>this.recipeForm.get('ingredients')).push(\n      new FormGroup({\n        'name': new FormControl(null, Validators.required),\n        'amount': new FormControl(null, [\n          Validators.required,\n          Validators.pattern(/^[1-9]+[0-9]*$/)\n        ])\n      })\n    );\n  }\n\n  onDeleteIngredient(index: number) {\n    (<FormArray>this.recipeForm.get('ingredients')).removeAt(index);\n  }\n\n  onCancel() {\n    this.router.navigate(['../'], {relativeTo: this.route});\n  }\n\n  getControls() {\n    return (<FormArray>this.recipeForm.get('ingredients')).controls;\n  }\n\n  private initForm() {\n    let recipeName = '';\n    let recipeImagePath = '';\n    let recipeDescription = '';\n    let recipeIngredients = new FormArray([]);\n\n    if (this.editMode) {\n      const recipe = this.recipeService.getRecipe(this.id);\n      recipeName = recipe.name;\n      recipeImagePath = recipe.imagePath;\n      recipeDescription = recipe.description;\n      if (recipe['ingredients']) {\n        for (let ingredient of recipe.ingredients) {\n          recipeIngredients.push(\n            new FormGroup({\n              'name': new FormControl(ingredient.name, Validators.required),\n              'amount': new FormControl(ingredient.amount, [\n                Validators.required,\n                Validators.pattern(/^[1-9]+[0-9]*$/)\n              ])\n            })\n          );\n        }\n      }\n    }\n\n    this.recipeForm = new FormGroup({\n      'name': new FormControl(recipeName, Validators.required),\n      'imagePath': new FormControl(recipeImagePath, Validators.required),\n      'description': new FormControl(recipeDescription, Validators.required),\n      'ingredients': recipeIngredients\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<a\\n  style=\\\"cursor: pointer;\\\"\\n  [routerLink]=\\\"[index]\\\"\\n  routerLinkActive=\\\"active\\\"\\n  class=\\\"list-group-item clearfix\\\">\\n  <div class=\\\"pull-left\\\">\\n    <h4 class=\\\"list-group-item-heading\\\">{{ recipe.name }}</h4>\\n    <p class=\\\"list-group-item-text\\\">{{ recipe.description }}</p>\\n  </div>\\n  <span class=\\\"pull-right\\\">\\n        <img\\n          [src]=\\\"recipe.imagePath\\\"\\n          alt=\\\"{{ recipe.name }}\\\"\\n          class=\\\"img-responsive\\\"\\n          style=\\\"max-height: 50px;\\\">\\n      </span>\\n</a>\\n\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Recipe } from '../../recipe.model';\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.css']\n})\nexport class RecipeItemComponent implements OnInit {\n  @Input() recipe: Recipe;\n  @Input() index: number;\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"onNewRecipe()\\\">New Recipe</button>\\n  </div>\\n</div>\\n<hr>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <app-recipe-item\\n      *ngFor=\\\"let recipeEl of recipes; let i = index\\\"\\n      [recipe]=\\\"recipeEl\\\"\\n      [index]=\\\"i\\\"></app-recipe-item>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { Recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css']\n})\nexport class RecipeListComponent implements OnInit, OnDestroy {\n  recipes: Recipe[];\n  subscription: Subscription;\n\n  constructor(private recipeService: RecipeService,\n              private router: Router,\n              private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    this.subscription = this.recipeService.recipesChanged\n      .subscribe(\n        (recipes: Recipe[]) => {\n          this.recipes = recipes;\n        }\n      );\n    this.recipes = this.recipeService.getRecipes();\n  }\n\n  onNewRecipe() {\n    this.router.navigate(['new'], {relativeTo: this.route});\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","module.exports = \"\"","module.exports = \"<h3>Please select a Recipe!</h3>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-start',\n  templateUrl: './recipe-start.component.html',\n  styleUrls: ['./recipe-start.component.css']\n})\nexport class RecipeStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from '../auth/auth-guard.service';\nimport { RecipeEditComponent } from './recipe-edit/recipe-edit.component';\nimport { RecipeDetailComponent } from './recipe-detail/recipe-detail.component';\nimport { RecipeStartComponent } from './recipe-start/recipe-start.component';\nimport { RecipesComponent } from './recipes.component';\n\nconst recipesRoutes: Routes = [\n  { path: '', component: RecipesComponent, children: [\n    { path: '', component: RecipeStartComponent },\n    { path: 'new', component: RecipeEditComponent, canActivate: [AuthGuard] },\n    { path: ':id', component: RecipeDetailComponent },\n    { path: ':id/edit', component: RecipeEditComponent, canActivate: [AuthGuard] },\n  ] },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(recipesRoutes)\n  ],\n  exports: [RouterModule],\n  providers: [\n    AuthGuard\n  ]\n})\nexport class RecipesRoutingModule {}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\">\\n    <app-recipe-list></app-recipe-list>\\n  </div>\\n  <div class=\\\"col-md-7\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css']\n})\nexport class RecipesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { RecipesComponent } from './recipes.component';\nimport { RecipeStartComponent } from './recipe-start/recipe-start.component';\nimport { RecipeListComponent } from './recipe-list/recipe-list.component';\nimport { RecipeEditComponent } from './recipe-edit/recipe-edit.component';\nimport { RecipeDetailComponent } from './recipe-detail/recipe-detail.component';\nimport { RecipeItemComponent } from './recipe-list/recipe-item/recipe-item.component';\nimport { RecipesRoutingModule } from './recipes-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    RecipesComponent,\n    RecipeStartComponent,\n    RecipeListComponent,\n    RecipeEditComponent,\n    RecipeDetailComponent,\n    RecipeItemComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RecipesRoutingModule,\n    SharedModule\n  ]\n})\nexport class RecipesModule {}\n"],"sourceRoot":""}